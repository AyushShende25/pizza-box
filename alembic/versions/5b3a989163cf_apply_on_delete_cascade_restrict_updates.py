"""apply ON DELETE cascade/restrict updates

Revision ID: 5b3a989163cf
Revises: 1a88bd5f636b
Create Date: 2025-10-07 16:27:44.414656

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5b3a989163cf'
down_revision: Union[str, Sequence[str], None] = '1a88bd5f636b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('cart_user_id_fkey'), 'cart', type_='foreignkey')
    op.create_foreign_key(None, 'cart', 'users', ['user_id'], ['id'], ondelete='SET NULL')
    op.drop_constraint(op.f('cart_item_cart_id_fkey'), 'cart_item', type_='foreignkey')
    op.drop_constraint(op.f('cart_item_size_id_fkey'), 'cart_item', type_='foreignkey')
    op.drop_constraint(op.f('cart_item_crust_id_fkey'), 'cart_item', type_='foreignkey')
    op.drop_constraint(op.f('cart_item_pizza_id_fkey'), 'cart_item', type_='foreignkey')
    op.create_foreign_key(None, 'cart_item', 'size', ['size_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'cart_item', 'crust', ['crust_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'cart_item', 'pizza', ['pizza_id'], ['id'], ondelete='RESTRICT')
    op.create_foreign_key(None, 'cart_item', 'cart', ['cart_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(op.f('cart_item_topping_topping_id_fkey'), 'cart_item_topping', type_='foreignkey')
    op.create_foreign_key(None, 'cart_item_topping', 'topping', ['topping_id'], ['id'], ondelete='RESTRICT')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'cart_item_topping', type_='foreignkey')
    op.create_foreign_key(op.f('cart_item_topping_topping_id_fkey'), 'cart_item_topping', 'topping', ['topping_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint(None, 'cart_item', type_='foreignkey')
    op.drop_constraint(None, 'cart_item', type_='foreignkey')
    op.drop_constraint(None, 'cart_item', type_='foreignkey')
    op.drop_constraint(None, 'cart_item', type_='foreignkey')
    op.create_foreign_key(op.f('cart_item_pizza_id_fkey'), 'cart_item', 'pizza', ['pizza_id'], ['id'])
    op.create_foreign_key(op.f('cart_item_crust_id_fkey'), 'cart_item', 'crust', ['crust_id'], ['id'])
    op.create_foreign_key(op.f('cart_item_size_id_fkey'), 'cart_item', 'size', ['size_id'], ['id'])
    op.create_foreign_key(op.f('cart_item_cart_id_fkey'), 'cart_item', 'cart', ['cart_id'], ['id'])
    op.drop_constraint(None, 'cart', type_='foreignkey')
    op.create_foreign_key(op.f('cart_user_id_fkey'), 'cart', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###
