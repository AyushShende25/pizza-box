"""add order models

Revision ID: b44aa415af8a
Revises: 276cb9e851a0
Create Date: 2025-10-19 19:50:46.708205

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b44aa415af8a'
down_revision: Union[str, Sequence[str], None] = '276cb9e851a0'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('orders',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_no', sa.String(length=50), nullable=False),
    sa.Column('subtotal', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('tax', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('delivery_charge', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('total', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('order_status', sa.Enum('PENDING', 'CONFIRMED', 'PREPARING', 'OUT_FOR_DELIVERY', 'DELIVERED', 'CANCELLED', name='orderstatus'), nullable=False),
    sa.Column('payment_status', sa.Enum('PENDING', 'PAID', 'FAILED', name='paymentstatus'), nullable=False),
    sa.Column('payment_method', sa.Enum('COD', 'CARD', 'UPI', 'NETBANKING', name='paymentmethod'), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=True),
    sa.Column('address_id', sa.Uuid(), nullable=False),
    sa.Column('delivery_address', sa.String(length=500), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['addresses.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_no')
    )
    op.create_table('order_item',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_id', sa.Uuid(), nullable=False),
    sa.Column('pizza_id', sa.Uuid(), nullable=True),
    sa.Column('size_id', sa.Uuid(), nullable=True),
    sa.Column('crust_id', sa.Uuid(), nullable=True),
    sa.Column('pizza_name', sa.String(length=255), nullable=False),
    sa.Column('size_name', sa.String(length=255), nullable=False),
    sa.Column('crust_name', sa.String(length=255), nullable=False),
    sa.Column('size_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('crust_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('base_pizza_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('toppings_total_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('unit_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('total_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['crust_id'], ['crust.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['pizza_id'], ['pizza.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['size_id'], ['size.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_item_topping',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('order_item_id', sa.Uuid(), nullable=False),
    sa.Column('topping_id', sa.Uuid(), nullable=True),
    sa.Column('topping_name', sa.String(length=255), nullable=False),
    sa.Column('topping_price', sa.DECIMAL(precision=10, scale=2), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['order_item_id'], ['order_item.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['topping_id'], ['topping.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order_item_topping')
    op.drop_table('order_item')
    op.drop_table('orders')
    # ### end Alembic commands ###
